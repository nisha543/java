1)Write a program to print numbers from 1 to 10
public class Main{
    public static void main(String[] args){
        for(int i=1; i<=10; i++){
            System.out.println(i);
        }
    }
}
----------------------------------------------------------
2)Write a program to calculate the sum of the first 10 natural numbers
public class Main{
    public static void main(String[] args){
        int sum = 0;
        for(int i=1; i<=10; i++){
          sum += i;
            System.out.println("the sum of natural number is"+ sum);
        }
    }
}
---------------------------------------------------------------------
3)Write a program that prompts the user to input a positive integer. It should then print the multiplication table of that number.
import java.util. *;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.println("enter the positive number:");
        int num = sc.nextInt();
         System.out.println("Multiplication table of " + num + ":");
        for (int i = 1; i <= 10; i++) {
            System.out.println(num + " x " + i + " = " + (num * i));
        }
    }
}
-------------------------------------------------------------------
4)Write a program to find the factorial value of any number entered through the keyboard.
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int n = scanner.nextInt();
        
        int factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }
        System.out.println("Factorial of " + n + " is: " + factorial);
    }
}
-------------------------------------------------------------------------
5)1--->100 number print 
public class Main {
    public static void main(String[] args) {
        for(int i=1; i<=100; i++){
            System.out.println(i);
        }
    }
}
--------------------------------------------
6)100---->1 number print


public class Main {
    public static void main(String[] args) {
        for(int i=100; i>=1; i--){
            System.out.println(i);
        }
    }
}
-------------------------------------------------------
7)1--->100 print sum of even number
public class Main{
    public static void main(String[] args) {
        int sum = 0;
        for (int i = 2; i <= 100; i += 2) {
            sum += i;
        }
        System.out.println("Sum of even numbers from 1 to 100: " + sum);
    }
}
-------------------------------------------------------
8) 100--->1 print sum of odd number
public class Main{
    public static void main(String[] args) {
        int sum = 0;
        for (int i = 99; i >= 1; i -= 2) {
            sum += i;
        }
        System.out.println("Sum of odd numbers from 100 to 1: " + sum);
    }
}
---------------------------------------------------------------------------
9) 50----->1000 print sum of even number
public class Main{
    public static void main(String[] args) {
        int sum = 0;
        for (int i = 50; i <= 1000; i += 2) {
            sum += i;
        }
        System.out.println("Sum of even numbers from 50 to 1000: " + sum);
    }
}
--------------------------------------------------------------------
10)print sum of odd number
public class Main {
    public static void main(String[] args) {
        int sum = 0;
        for (int i = 999; i >= 501; i -= 2) {
            sum += i;
        }
        System.out.println("Sum of odd numbers from 1000 to 500: " + sum);
    }
}
---------------------------------------------------------------------------------
average level: 
1)table 2 to 10
public class Main {
    public static void main(String[] args) {
        
        for (int i = 2; i <= 10; i++) {
            System.out.println("Table of " + i + ":");
            
            for (int j = 1; j <= 10; j++) {
                System.out.println(i + " x " + j + " = " + (i * j));
            }
            System.out.println(); 
}
    }
}
------------------------------------------------------------------
 
2)table print between range from user input 
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

       
        System.out.print("Enter the number for which you want to print the table: ");
        int number = scanner.nextInt();

        System.out.print("Enter the starting range: ");
        int startRange = scanner.nextInt();

        System.out.print("Enter the ending range: ");
        int endRange = scanner.nextInt();

       
        System.out.println("Table of " + number + " within the range " + startRange + " to " + endRange + ":");
        for (int i = startRange; i <= endRange; i++) {
            System.out.println(number + " x " + i + " = " + (number * i));
        }

     
    }
}
----------------------------------------------------------------------
3)1-->100 those type of numbers print (divisible by the multiple of any two numbers from user input ) 
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the first number: ");
        int num1 = scanner.nextInt();

        System.out.print("Enter the second number: ");
        int num2 = scanner.nextInt();

        System.out.println("Numbers between 1 and 100 divisible by " + num1 + " or " + num2 + ":");
        for (int i = 1; i <= 100; i++) {
            if (i % num1 == 0 || i % num2 == 0) {
                System.out.print(i + " ");
            }
        }

 
    }
}
-----------------------------------------------------------
4)1--->100 print numbers id divisible by 11and 5 both 
public class Main {
    public static void main(String[] args) {
       
        System.out.println("Numbers between 1 and 100 divisible by both 11 and 5:");
        for (int i = 1; i <= 100; i++) {
            if (i % 11 == 0 && i % 5 == 0) {
                System.out.print(i + " ");
            }
        }
    }
}
----------------------------------------------------------------------
5)print 2 table opposite 
public class Main {
    public static void main(String[] args) {
        
        System.out.println("2 Table in reverse order:");
        for (int i = 10; i >= 1; i--) {
            System.out.print(2 * i + " ");
        }
    }
}
---------------------------------------------
like : 20 18 16.......2 
6)print 2 table : 
like this format : 
2 X 1 =2 
2 X 2 =4 
public class Main {
    public static void main(String[] args) {
       
        System.out.println("2 Table with format:");
        for (int i = 1; i <= 10; i++) {
            System.out.println("2 X " + i + " = " + (2 * i));
        }
    }
}
----------------------------------------------------------------
7)write and make a program user input armstrong = then check number is armstrong and not , 
when user input pallindrome =check number is pallindrome or not , when user input reverse then check
 number is reverse or not (through user input ) (use if else if else and while loop and for loop only ) 
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a number to check if it is an Armstrong number: ");
        int number = scanner.nextInt();

       
        int originalNumber = number;
        int numDigits = 0;
        while (originalNumber != 0) {
            originalNumber /= 10;
            numDigits++;
        }

      
        int sum = 0;
        originalNumber = number;
        for (int i = 0; i < numDigits; i++) {
            int digit = originalNumber % 10;
            sum += Math.pow(digit, numDigits);
            originalNumber /= 10;
        }

        
        if (sum == number) {
            System.out.println(number + " is an Armstrong number.");
        } else {
            System.out.println(number + " is not an Armstrong number.");
        }

    
    }
}--------------------------
palindrome
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

       
        System.out.print("Enter a number to check if it is a palindrome: ");
        int number = scanner.nextInt();

        
        String numString = Integer.toString(number);
        int length = numString.length();
        boolean isPalindrome = true;

        
        for (int i = 0; i < length / 2; i++) {
            if (numString.charAt(i) != numString.charAt(length - 1 - i)) {
                isPalindrome = false;
                break;
            }
        }

     
        if (isPalindrome) {
            System.out.println(number + " is a palindrome.");
        } else {
            System.out.println(number + " is not a palindrome.");
        }

        
    }
}
------------------------
reverse number
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the original number: ");
        int originalNumber = scanner.nextInt();

        System.out.print("Enter the number to compare with (reverse): ");
        int compareNumber = scanner.nextInt();

        int reversedNumber = 0;
        int temp = originalNumber;
        while (temp != 0) {
            int digit = temp % 10;
            reversedNumber = reversedNumber * 10 + digit;
            temp /= 10;
        }

        if (reversedNumber == compareNumber) {
            System.out.println("The original number is the reverse of the comparison number.");
        } else {
            System.out.println("The original number is not the reverse of the comparison number.");
        }

    }
}
----------------------------------------------------------------------------
 write and make a program user input any number and user input like factorial then calculate a
 factorial of code and user input a string like reverse then calculate a reverse number only
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter a number:");
        int number = scanner.nextInt();
        scanner.nextLine(); 

        System.out.println("Enter 'factorial' to calculate factorial or 'reverse' to reverse the number:");
        String operation = scanner.nextLine().toLowerCase();

        switch (operation) {
            case "factorial":
                long factorial = calculateFactorial(number);
                System.out.println("Factorial of " + number + " is: " + factorial);
                break;
            case "reverse":
                int reversedNumber = reverseNumber(number);
                System.out.println("Reverse of " + number + " is: " + reversedNumber);
                break;
            default:
                System.out.println("Invalid operation.");
        }

        scanner.close();
    }

   
    private static long calculateFactorial(int n) {
        long factorial = 1;
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }
        return factorial;
    }

    
    private static int reverseNumber(int number) {
        int reversedNumber = 0;
        while (number != 0) {
            int digit = number % 10;
            reversedNumber = reversedNumber * 10 + digit;
            number /= 10;
        }
        return reversedNumber;
    }
}
------------------------------------------------------
)write and make a program user give two string like even and odd even denoted even number and odd denoted odd number
 when user input odd then input a range and calculate even and odd number in java ?(use if else if and for loop) 
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter string 1 (even or odd): ");
        String string1 = scanner.nextLine();

        System.out.print("Enter string 2: ");
        String string2 = scanner.nextLine();

        if (string1.equalsIgnoreCase("odd")) {
            System.out.print("Enter the starting number of the range: ");
            int start = scanner.nextInt();
            System.out.print("Enter the ending number of the range: ");
            int end = scanner.nextInt();

            System.out.println("Even numbers:");
            for (int i = start; i <= end; i++) {
                if (i % 2 == 0) {
                    System.out.print(i + " ");
                }
            }
            System.out.println("\nOdd numbers:");
            for (int i = start; i <= end; i++) {
                if (i % 2 != 0) {
                    System.out.print(i + " ");
                }
            }
        } else {
            System.out.println("Invalid input.");
        }

       
    }
}
--------------------------------------------------------------------
write a java prgram user input neon number :then calucate neon number or user input perfect number then 
calculate perfect number or user input prime number then agin user input is one or more when a user input one then
 check a input is prime or not otherwise userinput more then print 1 to 100 prime numbers or when user input a one digit
 the user input again : count ya sumofdigit when a user input count then count the digit and user input sumofdigit then 
addition of all the digits when user input fibonacci the user again input to lastnumber 
ya series of nth term when user input last number then print last number of a sum of fibonacci and user input a series then print a series of fibonacci	
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter 'neon', 'perfect', 'prime', 'count', 'sumofdigit', 'fibonacci', or 'series': ");
        String option = scanner.nextLine().toLowerCase();

        switch (option) {
            case "neon":
                System.out.print("Enter a number to check if it is a neon number: ");
                int neonNumber = scanner.nextInt();
                checkNeonNumber(neonNumber);
                break;
            case "perfect":
                System.out.print("Enter a number to check if it is a perfect number: ");
                int perfectNumber = scanner.nextInt();
                checkPerfectNumber(perfectNumber);
                break;
            case "prime":
                System.out.print("Enter 'one' to check if a number is prime or 'more' to print prime numbers up to 100: ");
                String input = scanner.nextLine().toLowerCase();
                if (input.equals("one")) {
                    System.out.print("Enter a number to check if it is prime: ");
                    int primeCheck = scanner.nextInt();
                    checkPrime(primeCheck);
                } else if (input.equals("more")) {
                    printPrimeNumbersUpTo100();
                } else {
                    System.out.println("Invalid input.");
                }
                break;
            case "count":
                System.out.print("Enter a number to count its digits: ");
                int countNumber = scanner.nextInt();
                int digitCount = countDigits(countNumber);
                System.out.println("Number of digits: " + digitCount);
                break;
            case "sumofdigit":
                System.out.print("Enter a number to find the sum of its digits: ");
                int sumNumber = scanner.nextInt();
                int digitSum = sumOfDigits(sumNumber);
                System.out.println("Sum of digits: " + digitSum);
                break;
            case "fibonacci":
                System.out.print("Enter 'lastnumber' or 'series': ");
                String fibonacciOption = scanner.nextLine().toLowerCase();
                if (fibonacciOption.equals("lastnumber")) {
                    System.out.print("Enter the last number of the Fibonacci series: ");
                    int lastNumber = scanner.nextInt();
                    int fibonacciSum = findFibonacciSum(lastNumber);
                    System.out.println("Last number of the Fibonacci series: " + fibonacciSum);
                } else if (fibonacciOption.equals("series")) {
                    System.out.print("Enter the number of terms for the Fibonacci series: ");
                    int terms = scanner.nextInt();
                    printFibonacciSeries(terms);
                } else {
                    System.out.println("Invalid input.");
                }
                break;
            default:
                System.out.println("Invalid option.");
        }

        scanner.close();
    }


    public static void checkNeonNumber(int number) {
        int square = number * number;
        int sum = 0;
        while (square != 0) {
            sum += square % 10;
            square /= 10;
        }
        if (sum == number) {
            System.out.println(number + " is a neon number.");
        } else {
            System.out.println(number + " is not a neon number.");
        }
    }

    // Function to check if a number is perfect
    public static void checkPerfectNumber(int number) {
        int sum = 0;
        for (int i = 1; i < number; i++) {
            if (number % i == 0) {
                sum += i;
            }
        }
        if (sum == number) {
            System.out.println(number + " is a perfect number.");
        } else {
            System.out.println(number + " is not a perfect number.");
        }
    }

   
    public static void checkPrime(int number) {
        boolean isPrime = true;
        if (number <= 1) {
            isPrime = false;
        } else {
            for (int i = 2; i <= Math.sqrt(number); i++) {
                if (number % i == 0) {
                    isPrime = false;
                    break;
                }
            }
        }
        if (isPrime) {
            System.out.println(number + " is a prime number.");
        } else {
            System.out.println(number + " is not a prime number.");
        }
    }

  
    public static void printPrimeNumbersUpTo100() {
        System.out.println("Prime numbers up to 100:");
        for (int i = 2; i <= 100; i++) {
            boolean isPrime = true;
            for (int j = 2; j <= Math.sqrt(i); j++) {
                if (i % j == 0) {
                    isPrime = false;
                    break;
                }
            }
            if (isPrime) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }


    public static int countDigits(int number) {
        int count = 0;
        while (number != 0) {
            number /= 10;
            count++;
        }
        return count;
    }

    public static int sumOfDigits(int number) {
        int sum = 0;
        while (number != 0) {
            sum += number % 10;
            number /= 10;
        }
        return sum;
    }


    public static int findFibonacciSum(int lastNumber) {
        int a = 0, b = 1, sum = 0;
        while (b <= lastNumber) {
            sum += b;
            int temp = a + b;
            a = b;
            b = temp;
        }
        return sum;
    }

    public static void printFibonacciSeries(int terms) {
        int a = 0, b = 1;
        System.out.println("Fibonacci series:");
        for (int i = 1; i <= terms; i++) {
            System.out.print(a + " ");
            int temp = a + b;
            a = b;
            b = temp;
        }
        System.out.println();
    }
}
----------------------------------------------------------------
Problem Statement – Chaman planned to choose a four digit lucky number for his car. His
lucky numbers are 3,5 and 7. Help him find the number, whose sum is divisible by 3 or 5 or
7. Provide a valid car number, Fails to provide a valid input then display that number is not a
valid car number.
Note : The input other than 4 digit positive number[includes negative and 0] is considered as
invalid.
Refer the samples, to read and display the data.

Sample Input 1:
Enter the car no:1234
Sample Output 1:
Lucky Number
Sample Input 2:
Enter the car no:1214
Sample Output 2:
Sorry its not my lucky number
Sample Input 3:
Enter the car no:14
Sample Output 3:
14 is not a valid car number

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the car no:");
        String carNumberStr = scanner.nextLine();

        if (isValidCarNumber(carNumberStr)) {
            int carNumber = Integer.parseInt(carNumberStr);
            if (isLuckyNumber(carNumber)) {
                System.out.println("Lucky Number");
            } else {
                System.out.println("Sorry its not my lucky number");
            }
        } else {
            System.out.println(carNumberStr + " is not a valid car number");
        }

        scanner.close();
    }


    public static boolean isValidCarNumber(String carNumberStr) {
        if (carNumberStr.length() != 4) {
            return false;
        }
        for (int i = 0; i < carNumberStr.length(); i++) {
            if (!Character.isDigit(carNumberStr.charAt(i))) {
                return false;
            }
        }
        int carNumber = Integer.parseInt(carNumberStr);
        return carNumber > 0;
    }

    
    public static boolean isLuckyNumber(int number) {
        int sum = 0;
        while (number != 0) {
            sum += number % 10;
            number /= 10;
        }
        return sum % 3 == 0 || sum % 5 == 0 || sum % 7 == 0;
    }
}
------------------------------------------------------------